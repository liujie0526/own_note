#!/bin/bash

#for Probe url and count failure rate.
#by ZhangYin.
#Thanks for the help of Echo7.

function shell_help () {
echo -e "\e[1;33mUsage: curl13 [OPTION]\e[0m"
echo -e "\e[1;33mProbe url and count failure rate.\e[0m"
echo -e ""
echo -e "\e[1;34m    -h, --help         Shell help\e[0m"
echo -e "\e[1;34m    -i, --interval     Probe interval\e[0m"
echo -e "\e[1;34m    -t, --totaltime    Total number of probes\e[0m"
echo -e "\e[1;34m    -u, --url          The url used to probe\e[0m"
echo -e "\e[1;34m    -T, --timeout      Timeout for each probe\e[0m"
echo -e "\e[1;34m    -l, --logfile      Logfile\e[0m"
}

function rotate() {
local INTERVAL=0.25
local RCOUNT="0"
echo -e "\e[1;31mexploring\e[0m"
while :
do
    ((RCOUNT = RCOUNT + 1))
    case $RCOUNT in
        1) echo -e '-\b\c'
            sleep $INTERVAL
            ;;
        2) echo -e '\\\b\c'
            sleep $INTERVAL
            ;;
        3) echo -e '|\b\c'
            sleep $INTERVAL
            ;;
        4) echo -e '/\b\c'
            sleep $INTERVAL
            ;;
        *) RCOUNT=0
            ;;
    esac
done
}

function Probe_interval () {

if [[  -n ${1} ]] ; then
    sleep ${1}
fi

}

function TANCE () {
> ${logfile}	
rotate &
trap "kill -9 $BG_PID" INT
ROTATE_PID=$!
for((i=1;i<=${1};i++));   do    curl -s -o /dev/null  --w "%{http_code}\n"  ${2} --connect-timeout ${3} -m 1 >> ${4} ; Probe_interval ${5}; done
echo -e '\b'
}

function REPORT () {

local ALL=`cat ${1}  | wc -l`
local SUE=`cat ${1}  | grep 200 |wc -l`
local FAI=`cat ${1}  | grep -v 200 |wc -l` 
rm -fr ${1}
echo -e "\e[1;33m The following is the test data: \e[0m"
echo -e " We have already sent a total of \e[1;34m ${ALL} \e[0m requests."
echo -e " There is \e[1;31m `echo "scale=2;$FAI/$ALL*100" |bc |awk -F '.' '{print $1}'` percent \e[0m failure rate. A total of  \e[1;31m `echo ${FAI}`  \e[0m requests failed"
echo -e " Thanks for using."

kill -9 $ROTATE_PID
echo -e "\e[1;32mfinished\e[0m"
}



fulltime=1
url='192.168.2.243/jfpt_qd/logon!toAdminlogon.action'
timeout=1
logfile=result.log

#echo $1
while [ -n "$1" ]
do
    case "$1" in
        -t|--fulltime) fulltime=$2; shift 2;;
        -u|--url) url=$2; shift 2;;
        -T|--timeout) timeout=$2; shift 2;;
        -l|--logfile) logfile=$2; shift 2;;
        -i|--interval) interval=$2; shift 2;;
        -h|--help) shell_help; exit 1;;
        --) break ;;
        *) shell_help; break ;;
    esac
done
TANCE ${fulltime} ${url} ${timeout} ${logfile} ${interval}
REPORT ${logfile}
#echo $1 '***' $fulltime $url $timeout $logfile $interval

